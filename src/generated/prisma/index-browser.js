
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CoordinatorScalarFieldEnum = {
  Coordinator_id: 'Coordinator_id',
  Name: 'Name'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  Employee_id: 'Employee_id',
  Salary: 'Salary',
  Position: 'Position'
};

exports.Prisma.EnrollScalarFieldEnum = {
  Student_id: 'Student_id',
  Course_id: 'Course_id'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  Enrollment_id: 'Enrollment_id',
  Student_id: 'Student_id',
  Course_id: 'Course_id',
  Semester: 'Semester',
  Final_grade: 'Final_grade',
  Coordinator_id: 'Coordinator_id'
};

exports.Prisma.EvaluationScalarFieldEnum = {
  Evaluation_id: 'Evaluation_id',
  Grade: 'Grade'
};

exports.Prisma.External_mentorScalarFieldEnum = {
  Ext_Mentor_id: 'Ext_Mentor_id',
  Org_id: 'Org_id'
};

exports.Prisma.Fieldt_courseScalarFieldEnum = {
  Course_id: 'Course_id',
  Name: 'Name',
  Duration: 'Duration',
  Org_id: 'Org_id'
};

exports.Prisma.Internal_mentorScalarFieldEnum = {
  Int_Mentor_id: 'Int_Mentor_id',
  Student_id: 'Student_id'
};

exports.Prisma.MentorScalarFieldEnum = {
  Mentor_id: 'Mentor_id',
  Course_id: 'Course_id'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  Org_id: 'Org_id',
  Name: 'Name',
  Contact_info: 'Contact_info',
  Approval_Status: 'Approval_Status',
  Coordinator_id: 'Coordinator_id'
};

exports.Prisma.PersonScalarFieldEnum = {
  Person_id: 'Person_id',
  Name: 'Name',
  Email: 'Email',
  Sex: 'Sex'
};

exports.Prisma.StudentScalarFieldEnum = {
  Student_id: 'Student_id',
  Level: 'Level',
  Major_Dept: 'Major_Dept',
  Evaluation_id: 'Evaluation_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.coordinatorOrderByRelevanceFieldEnum = {
  Name: 'Name'
};

exports.Prisma.employeeOrderByRelevanceFieldEnum = {
  Position: 'Position'
};

exports.Prisma.enrollOrderByRelevanceFieldEnum = {
  Course_id: 'Course_id'
};

exports.Prisma.enrollmentOrderByRelevanceFieldEnum = {
  Course_id: 'Course_id',
  Semester: 'Semester',
  Final_grade: 'Final_grade'
};

exports.Prisma.evaluationOrderByRelevanceFieldEnum = {
  Grade: 'Grade'
};

exports.Prisma.fieldt_courseOrderByRelevanceFieldEnum = {
  Course_id: 'Course_id',
  Name: 'Name',
  Duration: 'Duration'
};

exports.Prisma.mentorOrderByRelevanceFieldEnum = {
  Course_id: 'Course_id'
};

exports.Prisma.organizationOrderByRelevanceFieldEnum = {
  Name: 'Name',
  Contact_info: 'Contact_info',
  Approval_Status: 'Approval_Status'
};

exports.Prisma.personOrderByRelevanceFieldEnum = {
  Name: 'Name',
  Email: 'Email',
  Sex: 'Sex'
};

exports.Prisma.studentOrderByRelevanceFieldEnum = {
  Level: 'Level',
  Major_Dept: 'Major_Dept'
};


exports.Prisma.ModelName = {
  coordinator: 'coordinator',
  employee: 'employee',
  enroll: 'enroll',
  enrollment: 'enrollment',
  evaluation: 'evaluation',
  external_mentor: 'external_mentor',
  fieldt_course: 'fieldt_course',
  internal_mentor: 'internal_mentor',
  mentor: 'mentor',
  organization: 'organization',
  person: 'person',
  student: 'student'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
